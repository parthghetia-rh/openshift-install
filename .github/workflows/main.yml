name: Deploy Openshift on AWS

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: us-east-2
  OCP_VERSION: 4.18.9
  CLUSTER_NAME: parth-aws-self
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  PULL_SECRET: ${{ secrets.PULL_SECRET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
jobs:
  openshift-install:
    name: Install OpenShift
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl jq
          sudo rm -rf /usr/local/aws-cli
          curl -L "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          rm -rf awscliv2.zip aws
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          sudo mv kustomize /usr/local/bin/kustomize

      - name: Download OpenShift Installer and CLI
        run: |
          curl -L -o openshift-install-linux.tar.gz https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_VERSION}/openshift-install-linux-${OCP_VERSION}.tar.gz
          tar -xvzf openshift-install-linux.tar.gz
          sudo mv openshift-install /usr/local/bin/

          # Download and install oc CLI
          curl -L -o openshift-client-linux.tar.gz https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_VERSION}/openshift-client-linux-${OCP_VERSION}.tar.gz
          tar -xvzf openshift-client-linux.tar.gz
          sudo mv oc kubectl /usr/local/bin/

      - name: Set up AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-1

      - name: Create OpenShift Cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BASE_DOMAIN: ${{ secrets.BASE_DOMAIN }}
          CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          PULL_SECRET: ${{ secrets.PULL_SECRET }}
        run: |
          mkdir -p ./ocp-install
          envsubst < install-config.yaml.template > install-config.yaml
          cp install-config.yaml ./ocp-install/
          openshift-install create cluster --dir=./ocp-install --log-level=info
    
      - name: Upload manifests as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ocp-install-folder
          path: ./ocp-install
          retention-days: 5
      
      #post-install steps

      - name: Install RHACM Operator
        run: |
          export KUBECONFIG=$GITHUB_WORKSPACE/ocp-install/auth/kubeconfig

          echo "Checking if logged in to the cluster..."
          oc get nodes

          echo "Installing RHACM Operator..."
          oc apply -f ./acm-install/acm-install.yaml

          echo "Waiting for RHACM operator to be installed..."
          sleep 60
          oc get csv -n open-cluster-management

          echo "Installing Hub Admin Policies...
          oc apply -f ./acm-install/pre-acm-policies.yaml
          sleep 60

      
      - name: Install Policy Generator plugin
        run: |
          mkdir -p ~/.config/kustomize/plugin/open-cluster-management.io/PolicyGenerator
          curl -L https://github.com/stolostron/policy-generator-plugin/releases/latest/download/policygenerator-plugin-linux-amd64 -o ~/.config/kustomize/plugin/open-cluster-management.io/PolicyGenerator/PolicyGenerator
          chmod +x ~/.config/kustomize/plugin/open-cluster-management.io/PolicyGenerator/PolicyGenerator
          
      - name: Apply ACM Policies
        run: |
          cd ./acm-policies
          export KUBECONFIG=$GITHUB_WORKSPACE/ocp-install/auth/kubeconfig
          kustomize build --enable-alpha-plugins | oc apply -f -